@model SeniorLearnDataSeed.Models.Session.SessionCreate

@{
    ViewData["Title"] = "Create";
   
}

<h1>Create a Session</h1>


<hr />
<div class="row">
    <div class="col-md-8">
        <div class="course-form-container" style="border: 2px solid #ccc; border-radius: 15px; padding: 30px;">
            <form asp-action="Create" id="sessionForm">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <h4>Date</h4>
                <div class="form-group">
                    <label asp-for="StartTime" class="control-label"></label>
                    <input asp-for="StartTime" class="form-control" />
                    <span asp-validation-for="StartTime" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="EndTime" class="control-label"></label>
                    <input asp-for="EndTime" class="form-control" />
                    <span asp-validation-for="EndTime" class="text-danger"></span>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SelectedStatus, "Status")
                    @Html.DropDownListFor(model => model.SelectedStatus, (SelectList)ViewBag.StatusOptions, "Select Status", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SelectedStatus)
                </div>
                <p></p>
                <h5>Location</h5>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input custom-checkbox" type="checkbox" id="toggleCheckboxOnline" onclick="handleLocationCheckbox('Online');" />Online
                    </label>
                    <div id="meetingLink" style="display: none;" >
                        <label asp-for="MeetingLink" class="control-label"></label>
                        <input style="margin-bottom:30px;"asp-for="MeetingLink" class="form-control" />
                        <span asp-validation-for="MeetingLink" class="text-danger"></span>
                    </div>
                    
                </div>
                
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input custom-checkbox" type="checkbox" id="toggleCheckboxOnPrem" onclick="handleLocationCheckbox('OnPrem');" />On Premise
                    </label>
                    <div id="onPremiseDetails" style="display:none;">
                        <div>
                            <label asp-for="StreetNumber" class="control-label"></label>
                            <input asp-for="StreetNumber" class="form-control" />
                            <span asp-validation-for="StreetNumber" class="text-danger"></span>
                        </div>
                        
                        <div>
                            <label asp-for="StreetName" class="control-label"></label>
                            <input asp-for="StreetName" class="form-control" />
                            <span asp-validation-for="StreetName" class="text-danger"></span>
                        </div>
                        <div>
                            <label asp-for="Suburb" class="control-label"></label>
                            <input asp-for="Suburb" class="form-control" />
                            <span asp-validation-for="Suburb" class="text-danger"></span>
                        </div>
                        <p></p>
                    </div>
                </div>
                <h5 style="margin-top:20px;">Frequency </h5>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input custom-checkbox" type="checkbox" id="toggleCheckboxMultiple" onclick="handleFrequencyCheckbox('multiple'); updateFormAction();" />Multiple
                    </label>
                    <div id="frequency" style="display:none;">
                        <div id="numericFrequency">
                            <label asp-for="Frequency"></label>
                            <input type="number" asp-for="Frequency" class="form-control" />
                            <span asp-validation-for="Frequency" class="text-danger"></span>
                        </div>
                        <div style="margin-top: 20px; margin-bottom:20px;">
                            <label asp-for="SelectedTimePeriod">Select a frequency</label>
                            <select asp-for="SelectedTimePeriod" class="form-select" asp-items="Model.TimePeriods">
                                <option value="">Select a frequency</option>
                            </select>
                        </div>
                    </div>
                    
                </div>
                <div class="form-group form-check" id="singleSession">
                    <label class="form-check-label">
                        <input class="form-check-input custom-checkbox" id="toggleCheckboxSingle" type="checkbox" onclick="handleFrequencyCheckbox('single'); updateFormAction();"/>Once
                    </label>
                </div>
               
                
                <!--
                    <h5>OnLine Class </h5>
                <div class="form-group">
                    <label asp-for="MeetingLink" class="control-label"></label>
                    <input asp-for="MeetingLink" class="form-control" />
                    <span asp-validation-for="MeetingLink" class="text-danger"></span>
                </div>
                -->
                
                <input type="hidden" asp-for="CourseId" value="@Model.CourseId" />
                <div class="form-group">
                    <input style="margin-top: 20px;"type="submit" value="Continue" class="btn btn-primary" />
                </div>
            </form>
        </div>
        
    </div>

    <div class="col-md-4">
        <div class="instruction-box">
            <h3>Create your course</h3>
            <div class="step">
                <div class="circle ">1</div>
                <p>Add basic information about the course</p>
            </div>
            <div class="step">
                <div class="circle filled">2</div>
                <p>Add sessions</p>
            </div>
            
        </div>
    </div>
</div>
<div style="margin-top: 20px; margin-left: 30px;">
    <a asp-controller="Course" asp-action="Create" asp-route-id="@Model.CourseId">
        <button type="submit" class="btn btn-primary">Back To Course</button>
    </a>
    <a asp-controller="Home" asp-action="Index">
        <button type="submit" class="btn btn-primary">Back To Home</button>
    </a>
</div>




@{
 }
 <script>
     function updateFormAction(){
        var multipleCheckbox = document.getElementById('toggleCheckboxMultiple');
        var singleCheckbox = document.getElementById('toggleCheckboxSingle');
        var form = document.getElementById('sessionForm');

        if (multipleCheckbox.checked) {
            form, action = "/Session/CreateMultiple";
        } else if (singleCheckbox.checked) {
            form, action = "/Session/Create";
        }
     }
     
</script>
 <script>
     function handleLocationCheckbox(selected){
        var onlineCheckbox = document.getElementById('toggleCheckboxOnline');
        var onPremCheckbox = document.getElementById('toggleCheckboxOnPrem');
        var onPremiseDetails = document.getElementById('onPremiseDetails');
        var meetingLink = document.getElementById('meetingLink');
         if (selected === 'Online') {
             if (onlineCheckbox.checked) {
                 onPremCheckbox.checked = false;
                 meetingLink.style.display = "block";
                 onPremiseDetails.style.display = "none";
             }
             else {
                 meetingLink.style.display = "none";
             }
         }
         if (selected === 'OnPrem') {
             if (onPremCheckbox.checked) {
                 onlineCheckbox.checked = false;
                 onPremiseDetails.style.display = "block";
                 meetingLink.style.display = "none";
             } else{
                 onPremiseDetails.style.display = "none";
             }
         }
     }

 </script>

 <script>
     function handleFrequencyCheckbox(selected) {
         var multipleCheckbox = document.getElementById('toggleCheckboxMultiple');
         var singleCheckbox = document.getElementById('toggleCheckboxSingle');
         var frequency = document.getElementById('frequency');
         if(selected === 'single'){
             if (singleCheckbox.checked) {
                multipleCheckbox.checked = false;
                frequency.style.display = "none";
             }
             else{
                 frequency.style.display = "block";
             }
             
             
         }
         if(selected === 'multiple'){
             if (multipleCheckbox.checked) {
                 singleCheckbox.checked = false;
                 frequency.style.display = "block";
             }
             else{
                 frequency.style.display = "none";
             }
         }
     }
</script>
 

 
 


    
<script> 
    document.getElementById('sessionForm').addEventListener('submit', function (event) {
        var Suburb = document.getElementById('Suburb').value;
        var StreetN = document.getElementById('StreetName').value;
        var StreetNum = document.getElementById('StreetNumber').value;
        var meetingLink = document.getElementById('MeetingLink').value;

        // Check if any part of the street address is filled
        if (Suburb || StreetN || StreetNum) {
            // If any part of the address is filled, meetingLink must be empty
            if (meetingLink) {
                // Both fields have values, raise an alert
                alert("Please only enter an on-premise or online class option.");
                event.preventDefault();  // Prevent form submission
            }else {
                // If street address fields are empty, ensure meetingLink is not also empty
                if (!Suburb || !StreetN || !StreetNum) {
                    alert("Please correctly enter the full address.");
                    event.preventDefault();  // Prevent form submission
                }
            }
        } else if (!Suburb && !StreetN && !StreetNum && !meetingLink){
            alert("Please input an address option.");
            event.preventDefault();
        }
    });

   
</script>

@section Scripts{
    <partial name="_ValidationScriptsPartial"/>
}

<style>
    .instruction-box {
        border: 2px solid #ccc;
        border-radius: 15px;
        padding: 30px;
        text-align: left;
    }

    /* Step container */
    .step {
        display: flex;
        align-items: center;
        margin-bottom: 20px;
        justify-content: center;
    }

    /* Circle styling for the numbers */
    .circle {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        border: 2px solid #ccc color: #007bff;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 1.5rem;
        font-weight: bold;
        margin-right: 15px;
        background-color: transparent;
    }

    .filled {
        background-color: #f4978e;
        color: white;
        border: none;
    }

    /* Style for text next to the circle */
    .step p {
        margin: 0;
        font-size: 1.1rem;
        flex-grow: 1;
        text-align: left;
    }

    .custom-checkbox {
        width: 24px;
        height: 24px;
        border-radius: 50%;
        appearance: none;
        -webkit-appearance: none;
        outline: none;
        border: 2px solid #007bff;
        margin-right: 10px;
        cursor: pointer;
        position: relative;
        transition: background-color 0.2s ease, border-color 0.2s ease;
        margin-bottom: 20px;
        
    }

        .custom-checkbox:checked {
            background-color: #007bff;
            border-color: #007bff;
            position: relative;
        }

    }

    .custom-checkbox:checked::after {
        content: '✔';
        font-size: 14px;
        color: white;
        position: absolute;
        top: 0;
        left: 2px;
        font-weight: bold;
    }



    .form-check-label {
        padding-left: 10px;
        vertical-align: middle;
        cursor: pointer;
    }

    .course-form-container {
        border: 2px solid #ccc;
        border-radius: 15px;
        padding: 30px;
    }

    .instruction-box {
        border: 2px solid #ccc;
        border-radius: 15px;
        padding: 30px;
        text-align: center;
    }

    .difficulty-options button {
        margin-right: 10px;
        margin-bottom: 10px;
    }

        .difficulty-options button.active {
            background-color: #007bff;
            color: white;
        }

    h1 {
        font-size: 2rem;
        margin-bottom: 20px;
    }
</style>
